syntax = "proto3";
package dydxprotocol.vesting;

import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "dydxprotocol/vesting/vesting_entry.proto";

option go_package = "github.com/dydxprotocol/v4/x/vesting/types";

// Msg defines the Msg service.
service Msg {
  // SetVestingEntry sets a VestingEntry in state.
  rpc SetVestingEntry(MsgSetVestingEntry) returns (MsgSetVestingEntryResponse);
  // DeleteVestingEntry deletes a VestingEntry from state.
  rpc DeleteVestingEntry(MsgDeleteVestingEntry)
      returns (MsgDeleteVestingEntryResponse);
}

// MsgDeleteVestingEntry is the Msg/DeleteVestingEntry request type.
message MsgDeleteVestingEntry {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The vester account of the vesting entry to delete.
  string vester_account = 2;
}

// MsgDeleteVestingEntryResponse is the Msg/DeleteVestingEntry response type.
message MsgDeleteVestingEntryResponse {}

// MsgSetVestingEntry is the Msg/SetVestingEntry request type.
message MsgSetVestingEntry {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The vesting entry to set.
  VestingEntry entry = 2;
}

// MsgSetVestingEntryResponse is the Msg/SetVestingEntry response type.
message MsgSetVestingEntryResponse {}
